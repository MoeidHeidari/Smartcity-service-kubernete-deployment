"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLogger = exports.logger = exports.uniqueId = exports.pascalCase = exports.camelCase = void 0;
const camelcase_1 = __importDefault(require("camelcase"));
exports.camelCase = (str) => camelcase_1.default(str.replace(/[-/]/g, "_"));
exports.pascalCase = (str) => camelcase_1.default(str.replace(/[-/]/g, "_"), { pascalCase: true });
function uniqueId(set, key) {
    if (set.has(key)) {
        return uniqueId(set, `${key}_${set.size}`);
    }
    set.add(key);
    return key;
}
exports.uniqueId = uniqueId;
const noOp = () => { };
const stubLogger = {
    ...console,
    debug: noOp,
    trace: noOp,
    log: noOp,
    warn: noOp,
    error: noOp,
};
exports.logger = stubLogger;
function setLogger(log) {
    exports.logger = log;
}
exports.setLogger = setLogger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwwREFBa0M7QUFFckIsUUFBQSxTQUFTLEdBQUcsQ0FBQyxHQUFXLEVBQUUsRUFBRSxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNsRSxRQUFBLFVBQVUsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFLENBQ3hDLG1CQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUU3RCxTQUFnQixRQUFRLENBQUMsR0FBZ0IsRUFBRSxHQUFXO0lBQ3BELElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixPQUFPLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7S0FDNUM7SUFDRCxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2IsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBTkQsNEJBTUM7QUFFRCxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7QUFDdEIsTUFBTSxVQUFVLEdBQVk7SUFDMUIsR0FBRyxPQUFPO0lBQ1YsS0FBSyxFQUFFLElBQUk7SUFDWCxLQUFLLEVBQUUsSUFBSTtJQUNYLEdBQUcsRUFBRSxJQUFJO0lBQ1QsSUFBSSxFQUFFLElBQUk7SUFDVixLQUFLLEVBQUUsSUFBSTtDQUNaLENBQUM7QUFFUyxRQUFBLE1BQU0sR0FBRyxVQUFVLENBQUM7QUFDL0IsU0FBZ0IsU0FBUyxDQUFDLEdBQVk7SUFDcEMsY0FBTSxHQUFHLEdBQUcsQ0FBQztBQUNmLENBQUM7QUFGRCw4QkFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYW1lbGNhc2UgZnJvbSBcImNhbWVsY2FzZVwiO1xuXG5leHBvcnQgY29uc3QgY2FtZWxDYXNlID0gKHN0cjogc3RyaW5nKSA9PiBjYW1lbGNhc2Uoc3RyLnJlcGxhY2UoL1stL10vZywgXCJfXCIpKTtcbmV4cG9ydCBjb25zdCBwYXNjYWxDYXNlID0gKHN0cjogc3RyaW5nKSA9PlxuICBjYW1lbGNhc2Uoc3RyLnJlcGxhY2UoL1stL10vZywgXCJfXCIpLCB7IHBhc2NhbENhc2U6IHRydWUgfSk7XG5cbmV4cG9ydCBmdW5jdGlvbiB1bmlxdWVJZChzZXQ6IFNldDxzdHJpbmc+LCBrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmIChzZXQuaGFzKGtleSkpIHtcbiAgICByZXR1cm4gdW5pcXVlSWQoc2V0LCBgJHtrZXl9XyR7c2V0LnNpemV9YCk7XG4gIH1cbiAgc2V0LmFkZChrZXkpO1xuICByZXR1cm4ga2V5O1xufVxuXG5jb25zdCBub09wID0gKCkgPT4ge307XG5jb25zdCBzdHViTG9nZ2VyOiBDb25zb2xlID0ge1xuICAuLi5jb25zb2xlLFxuICBkZWJ1Zzogbm9PcCxcbiAgdHJhY2U6IG5vT3AsXG4gIGxvZzogbm9PcCxcbiAgd2Fybjogbm9PcCxcbiAgZXJyb3I6IG5vT3AsXG59O1xuXG5leHBvcnQgbGV0IGxvZ2dlciA9IHN0dWJMb2dnZXI7XG5leHBvcnQgZnVuY3Rpb24gc2V0TG9nZ2VyKGxvZzogQ29uc29sZSkge1xuICBsb2dnZXIgPSBsb2c7XG59XG4iXX0=