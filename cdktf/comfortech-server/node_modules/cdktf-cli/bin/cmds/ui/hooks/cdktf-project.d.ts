import { CdktfProject } from "../../../../lib/";
import { CdktfStack } from "../../../../lib/cdktf-stack";
export declare type LogEntry = {
    content: string;
    id: string;
    stackName: string;
};
declare type CdktfProjectOpts = {
    outDir: string;
    synthCommand: string;
};
export declare type Status = {
    type: "starting";
} | {
    type: "synthesizing";
} | {
    type: "running";
    inProgress: CdktfStack[];
    finished: CdktfStack[];
    pending: CdktfStack[];
} | {
    type: "waiting for approval of stack";
    stackName: string;
    approve: () => void;
    dismiss: () => void;
    stop: () => void;
} | {
    type: "done";
};
export declare function useCdktfProject<T>(opts: CdktfProjectOpts, projectCallback: (project: CdktfProject) => Promise<T>): {
    logEntries: LogEntry[];
    returnValue: T | undefined;
    status: Status;
};
export {};
